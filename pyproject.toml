
[app]
port = 8000

[sample]
key_1 = "key_one"
key_2 = "key_two"

[tool.poetry]
name = "action-read-toml"
version = "2.0.4"
description = ""
authors = ["Outcome Engineering <engineering@outcome.co>"]
readme = "README.md"

[tool.docker]
registry = "docker.io"
repository = "outcomeco"

[tool.poetry.dependencies]
python = "~3.8.5"
outcome-read-toml = "^2.0.2"
typer = "^0.3.2"
makefun = "^1.9.4"

[tool.poetry.dev-dependencies]
outcome-devkit = "^3.3.3"

[tool.black]
line-length = 130
include = '\.pyi?$'
# This stops black from rewriting quotes
skip-string-normalization = true
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | \.cache
)/
'''

[tool.isort]
skip_glob = "*/.cache/**/*"

[tool.coverage.run]
branch = true
data_file = 'coverage/data'
source = ['src']
omit = [
   "test/*"
]
parallel = true
plugins = ["outcome.devkit.env_coverage"]

[tool.coverage.report]
fail_under = 100
skip_empty = true

[tool.coverage.html]
show_contexts = true
directory = 'coverage/html'

[tool.commitizen]
name = "cz_conventional_commits"
version = "2.0.4"
tag_format = "v$version"
bump_message = "chore(version): $current_version â†’ $new_version"
version_files = ["pyproject.toml:version", "README.md:version-badge", "action.yaml:image"]

[build-system]
requires = ["poetry==1.0.10"]
build-backend = "poetry.masonry.api"
